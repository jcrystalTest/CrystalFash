package dev.jcrystal.crystalfash.entities;

import jcrystal.entity.types.Autogenerated;
import jcrystal.json.JsonLevel;
import jcrystal.reflection.annotations.EntityProperty;
import jcrystal.reflection.annotations.jEntity;
import jcrystal.reflection.annotations.entities.Rel1to1;
import jcrystal.server.Entity;

@jEntity
public class CartItem implements Entity.DefaultDB{
	@jcrystal.reflection.annotations.EntityKey
	private static Autogenerated id;
	
	@Rel1to1(target="items", keyLevel=JsonLevel.NORMAL)
	private static Product product;
	@EntityProperty
	private static int quantity;

/* GEN */
	public static final String ENTITY_NAME = "CartItem";
	protected final com.google.appengine.api.datastore.Entity rawEntity;
	public final com.google.appengine.api.datastore.Entity getRawEntity(){return rawEntity;}
	public CartItem(com.google.appengine.api.datastore.Entity rawEntity){
		this.rawEntity = rawEntity;
	}
	public CartItem(){
		rawEntity = new com.google.appengine.api.datastore.Entity(ENTITY_NAME);
	}
	protected CartItem(String entityName){
		rawEntity = new com.google.appengine.api.datastore.Entity(entityName);
	}
	public CartItem cloneFrom(CartItem from){
		this.rawEntity.setPropertiesFrom(from.rawEntity);
		return this;
	}
	public Long id(){
		return rawEntity.getKey().getId();
	}
	public CartItem put(){
		jcrystal.context.CrystalContext.get().DefaultDB().service.put(null, rawEntity);
		return this;
	}
	public CartItem putTxn(){
		jcrystal.context.CrystalContext $ctx = jcrystal.context.CrystalContext.get();
		$ctx.DefaultDB().service.put($ctx.DefaultDB().getTxn(), rawEntity);
		return this;
	}
	public static com.google.appengine.api.datastore.Entity rawGetTxn(Long id){
		if(null == id){return null;}
		try{
			jcrystal.context.CrystalContext $ctx = jcrystal.context.CrystalContext.get();
			return $ctx.DefaultDB().service.get($ctx.DefaultDB().getTxn(), CartItem.Key.createRawKey(id));
		}
		catch(com.google.appengine.api.datastore.EntityNotFoundException | java.lang.IllegalArgumentException e){
			return null;
		}
	}
	public static com.google.appengine.api.datastore.Entity rawGet(Long id){
		if(null == id){return null;}
		try{
			return jcrystal.context.CrystalContext.get().DefaultDB().service.get(null, CartItem.Key.createRawKey(id));
		}
		catch(com.google.appengine.api.datastore.EntityNotFoundException | java.lang.IllegalArgumentException e){
			return null;
		}
	}
	public static CartItem get(Long id){
		com.google.appengine.api.datastore.Entity ent = rawGet(id);
		if(ent == null)return null;
		return new CartItem(ent);
	}
	public static CartItem getTxn(Long id){
		com.google.appengine.api.datastore.Entity ent = rawGetTxn(id);
		if(ent == null)return null;
		return new CartItem(ent);
	}
	public static CartItem get(com.google.appengine.api.datastore.Key $key){
		if($key == null){return null;}
		try{
			return new CartItem(jcrystal.context.CrystalContext.get().DefaultDB().service.get(null, $key));
		}
		catch(com.google.appengine.api.datastore.EntityNotFoundException | java.lang.IllegalArgumentException e){
			return null;
		}
	}
	public static CartItem getTxn(com.google.appengine.api.datastore.Key $key){
		if($key == null){return null;}
		try{
			jcrystal.context.CrystalContext $ctx = jcrystal.context.CrystalContext.get();
			return new CartItem($ctx.DefaultDB().service.get($ctx.DefaultDB().getTxn(), $key));
		}
		catch(com.google.appengine.api.datastore.EntityNotFoundException | java.lang.IllegalArgumentException e){
			return null;
		}
	}
	public static boolean exist(Long id){
		com.google.appengine.api.datastore.Entity ent = rawGet(id);
		return ent != null;
	}
	public static CartItem tryGet(Long id){
		com.google.appengine.api.datastore.Entity ent = rawGet(id);
		if(ent == null)throw new jcrystal.utils.InternalException(17, "Identificador invalido");
		return new CartItem(ent);
	}
	public static CartItem tryGet(Long id, CartItem $defValue){
		com.google.appengine.api.datastore.Entity ent = rawGet(id);
		if(ent == null)return $defValue;
		return new CartItem(ent);
	}
	public static CartItem tryGetTxn(Long id){
		com.google.appengine.api.datastore.Entity ent = rawGetTxn(id);
		if(ent == null)throw new jcrystal.utils.InternalException(17, "Identificador invalido");
		return new CartItem(ent);
	}
	public CartItem quantity(int quantity){
		rawEntity.setUnindexedProperty("quantity", quantity);
		return this;
	}
	public CartItem product(dev.jcrystal.crystalfash.entities.Product val){
		if(val != null){
			rawEntity.setIndexedProperty("product", val.id());
		}
		else{
			rawEntity.setIndexedProperty("product", null);
		}
		return this;
	}
	public CartItem product(Long id){
		rawEntity.setIndexedProperty("product", id);
		return this;
	}
	public int quantity(){
		return jcrystal.db.datastore.EntityUtils.getInt(rawEntity, "quantity");
	}
	public Long product$Key(){
		return (Long)rawEntity.getProperty("product");
	}
	public dev.jcrystal.crystalfash.entities.Product product(){
		return dev.jcrystal.crystalfash.entities.Product.get(product$Key());
	}
	public dev.jcrystal.crystalfash.entities.Product productTxn(){
		return dev.jcrystal.crystalfash.entities.Product.getTxn(product$Key());
	}
	public static class CachedGetter{
		private java.util.TreeMap<Long, CartItem> cache = new java.util.TreeMap<>();
		public CartItem get(Long id){
			CartItem ret = cache.get(id);
			if(ret == null){
				cache.put(id, ret = CartItem.get(id));
			}
			return ret;
		}
	}
	public static class Post extends PostCartItem{}
	public static class Serializer extends SerializerCartItem{}
	public static class Query extends QueryCartItem{}
	public static class Batch extends BatchCartItem{}
	public static class Key{
		private Key(){}
		public static com.google.appengine.api.datastore.Key createRawKey(Long id){
			return com.google.appengine.api.datastore.KeyFactory.createKey(ENTITY_NAME, id);
		}
	}
	public static class Meta extends MetaCartItem{}
/* END */
}
